{"ast":null,"code":"import _slicedToArray from \"/Users/ahsan/Documents/git/JS Miscellaneous/react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ahsan/Documents/git/JS Miscellaneous/react-hooks/src/components/Todo.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nvar todo = function todo(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoName = _useState2[0],\n      setTodoName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submittedTodo = _useState4[0],\n      setSubmittedTodo = _useState4[1]; //const [todoList, setTodoList] = useState([]);\n\n\n  var todoListReducer = function todoListReducer(state, action) {\n    switch (action.type) {\n      case 'ADD':\n        return state.concat(action.payload);\n\n      case 'SET':\n        return action.payload;\n\n      case 'REMOVE':\n        return state.filter(function (todo) {\n          return todo.id !== action.payload;\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var _useReducer = useReducer(todoListReducer, []),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      todoList = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    axios.get('https://test-38c9e.firebaseio.com/todos.json').then(function (res) {\n      console.log(res);\n      var todoData = res.data;\n      var todos = [];\n\n      for (var key in todoData) {\n        todos.push({\n          id: key,\n          name: todoData[key].name\n        });\n      }\n\n      dispatch({\n        type: 'SET',\n        payload: todos\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    return function () {\n      console.log('Cleanup');\n    };\n  }, []);\n\n  var mouseMoveHandler = function mouseMoveHandler(event) {\n    console.log(event.clientX, event.clientY);\n  };\n\n  useEffect(function () {\n    document.addEventListener('mouseover', mouseMoveHandler);\n    return function () {\n      document.removeEventListener('mouseover', mouseMoveHandler);\n    };\n  }, []);\n  useEffect(function () {\n    if (submittedTodo) {\n      dispatch({\n        type: 'ADD',\n        payload: submittedTodo\n      });\n    }\n  }, [submittedTodo]);\n\n  var inputChangeHandler = function inputChangeHandler(event) {\n    setTodoName(event.target.value);\n  };\n\n  var todoAddHandler = function todoAddHandler() {\n    axios.post('https://test-38c9e.firebaseio.com/todos.json', {\n      name: todoName\n    }).then(function (res) {\n      setTimeout(function () {\n        var todoItem = {\n          id: res.data.name,\n          name: todoName\n        };\n        setSubmittedTodo(todoItem);\n      }, 3000);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Todo\",\n    value: todoName.name,\n    onChange: inputChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: todoAddHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, todoList.map(function (todo) {\n    return React.createElement(\"li\", {\n      key: todo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, todo.name);\n  })));\n};\n\nexport default todo;","map":{"version":3,"sources":["/Users/ahsan/Documents/git/JS Miscellaneous/react-hooks/src/components/Todo.js"],"names":["React","useState","useEffect","useReducer","axios","todo","props","todoName","setTodoName","submittedTodo","setSubmittedTodo","todoListReducer","state","action","type","concat","payload","filter","id","todoList","dispatch","get","then","res","console","log","todoData","data","todos","key","push","name","catch","err","mouseMoveHandler","event","clientX","clientY","document","addEventListener","removeEventListener","inputChangeHandler","target","value","todoAddHandler","post","setTimeout","todoItem","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport axios from 'axios';\n\nconst todo = props => {\n    const [todoName, setTodoName] = useState('');\n    const [submittedTodo, setSubmittedTodo] = useState(null);\n    //const [todoList, setTodoList] = useState([]);\n\n    const todoListReducer = (state, action) => {\n        switch(action.type) {\n            case 'ADD':\n                return state.concat(action.payload);\n            case 'SET':\n                return action.payload;\n            case 'REMOVE':\n                return state.filter((todo) => todo.id !== action.payload);\n            default:\n                return state;\n        }\n    }\n\n    const [todoList, dispatch] = useReducer(todoListReducer, []);\n\n    useEffect(()=>{\n        axios.get('https://test-38c9e.firebaseio.com/todos.json')\n            .then(res => {\n                console.log(res)\n                const todoData = res.data;\n                const todos = []\n                for(const key in todoData){\n                    todos.push({id : key, name : todoData[key].name})\n                }\n                dispatch({type : 'SET', payload : todos})\n            })\n            .catch(err => console.log(err))\n        return () => {\n            console.log('Cleanup')\n        }\n    },[]);\n\n    const mouseMoveHandler = event => {\n        console.log(event.clientX, event.clientY)\n    }\n\n\n\n    useEffect(() => {\n        document.addEventListener('mouseover',mouseMoveHandler)\n        return () => {\n            document.removeEventListener('mouseover', mouseMoveHandler)\n        }\n    },[])\n\n    useEffect(() => {\n        if (submittedTodo){\n            dispatch({type : 'ADD', payload : submittedTodo})\n        }\n    }, [submittedTodo])\n\n    const inputChangeHandler = (event) => {\n        setTodoName(event.target.value)\n    }\n\n    const todoAddHandler = () => {\n         axios.post('https://test-38c9e.firebaseio.com/todos.json',{name : todoName})\n            .then(res => {\n                setTimeout(()=> {\n                    const todoItem = {id : res.data.name, name : todoName}\n                    setSubmittedTodo(todoItem);\n                }, 3000);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    \n    return (\n        <React.Fragment>\n            <input \n                type = 'text' \n                placeholder = 'Todo'\n                value = {todoName.name}\n                onChange = {inputChangeHandler} />\n            <button type = \"button\" onClick = {todoAddHandler} >Add</button>\n            <ul>\n                {todoList.map(todo => \n                    <li key = {todo.id}>{todo.name}</li>)}\n            </ul>\n        </React.Fragment>\n    )\n   \n}\n\nexport default todo;"]},"metadata":{},"sourceType":"module"}