{"ast":null,"code":"import _slicedToArray from \"/Users/ahsan/Documents/git/JS Miscellaneous/react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ahsan/Documents/git/JS Miscellaneous/react-hooks/src/App.js\";\n\nimport React, { useState } from 'react';\nimport Todo from './components/Todo';\nimport Header from './components/Header';\nimport Auth from './components/Auth';\nimport AuthContext from './auth-context';\n\nvar app = function app(props) {\n  var _useState = useState('auth'),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      authState = _useState4[0],\n      setAuthState = _useState4[1];\n\n  var switchPage = function switchPage(pageName) {\n    setPage(pageName);\n  };\n\n  var login = function login() {\n    setAuthState(true);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(AuthContext.Provider, {\n    value: {\n      status: authState,\n      login: login\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Header, {\n    onLoadTodos: switchPage.bind(_this, 'todos'),\n    onLoadAuth: switchPage.bind(_this, 'auth'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), page === 'auth' ? React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }) : React.createElement(Todo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })));\n};\n\nexport default app;","map":{"version":3,"sources":["/Users/ahsan/Documents/git/JS Miscellaneous/react-hooks/src/App.js"],"names":["React","useState","Todo","Header","Auth","AuthContext","app","props","page","setPage","authState","setAuthState","switchPage","pageName","login","status","bind"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAAA,kBACKN,QAAQ,CAAC,MAAD,CADb;AAAA;AAAA,MACZO,IADY;AAAA,MACNC,OADM;;AAAA,mBAEeR,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,MAEZS,SAFY;AAAA,MAEDC,YAFC;;AAInB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,QAAQ,EAAI;AAC7BJ,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD,GAFD;;AAIA,MAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAI;AAACI,MAAAA,MAAM,EAAGL,SAAV;AAAqBI,MAAAA,KAAK,EAAGA;AAA7B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AACE,IAAA,WAAW,EAAIF,UAAU,CAACI,IAAX,CAAgB,KAAhB,EAAsB,OAAtB,CADjB;AAEE,IAAA,UAAU,EAAIJ,UAAU,CAACI,IAAX,CAAgB,KAAhB,EAAsB,MAAtB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,EAMCR,IAAI,KAAK,MAAT,GAAkB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlB,GAA4B,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN7B,CADF,CADF;AAaD,CAzBD;;AA4BA,eAAeF,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Todo from './components/Todo';\nimport Header from './components/Header';\nimport Auth from './components/Auth';\nimport AuthContext from './auth-context';\n\nconst app = props => {\n  const [page, setPage] = useState('auth');\n  const [authState, setAuthState] = useState(false);\n  \n  const switchPage = pageName => {\n    setPage(pageName)\n  }\n\n  const login = () => {\n    setAuthState(true);\n  }\n  \n  return(\n    <div className=\"App\">\n      <AuthContext.Provider value = {{status : authState, login : login}}>\n      <Header\n        onLoadTodos = {switchPage.bind(this, 'todos')}\n        onLoadAuth = {switchPage.bind(this, 'auth')}\n      />\n      <hr/>\n      {page === 'auth' ? <Auth/> : <Todo/>}\n      </AuthContext.Provider>\n    </div>\n  )\n    \n};\n\n\nexport default app;\n"]},"metadata":{},"sourceType":"module"}