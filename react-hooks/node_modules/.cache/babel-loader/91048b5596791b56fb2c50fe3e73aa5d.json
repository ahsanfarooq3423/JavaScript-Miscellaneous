{"ast":null,"code":"import _slicedToArray from \"/Users/ahsan/Documents/git/JS Miscellaneous/react-hooks/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ahsan/Documents/git/JS Miscellaneous/react-hooks/src/components/Todo.js\";\nimport React, { useEffect, useReducer, useRef } from 'react';\nimport axios from 'axios';\nimport List from './List';\n\nvar todo = function todo(props) {\n  //const [todoName, setTodoName] = useState('');\n  //const [submittedTodo, setSubmittedTodo] = useState(null);\n  //const [todoList, setTodoList] = useState([]);\n  var todoInputRef = useRef();\n\n  var todoListReducer = function todoListReducer(state, action) {\n    switch (action.type) {\n      case 'ADD':\n        return state.concat(action.payload);\n\n      case 'SET':\n        return action.payload;\n\n      case 'REMOVE':\n        return state.filter(function (todo) {\n          return todo.id !== action.payload;\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var _useReducer = useReducer(todoListReducer, []),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      todoList = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    axios.get('https://test-38c9e.firebaseio.com/todos.json').then(function (res) {\n      console.log(res);\n      var todoData = res.data;\n      var todos = [];\n\n      for (var key in todoData) {\n        todos.push({\n          id: key,\n          name: todoData[key].name\n        });\n      }\n\n      dispatch({\n        type: 'SET',\n        payload: todos\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    return function () {\n      console.log('Cleanup');\n    };\n  }, []);\n\n  var mouseMoveHandler = function mouseMoveHandler(event) {\n    console.log(event.clientX, event.clientY);\n  }; // useEffect(() => {\n  //     document.addEventListener('mouseover',mouseMoveHandler)\n  //     return () => {\n  //         document.removeEventListener('mouseover', mouseMoveHandler)\n  //     }\n  // },[])\n  // useEffect(() => {\n  //     if (submittedTodo){\n  //         dispatch({type : 'ADD', payload : submittedTodo})\n  //     }\n  // }, [submittedTodo])\n  // const inputChangeHandler = (event) => {\n  //     setTodoName(event.target.value)\n  // }\n\n\n  var todoAddHandler = function todoAddHandler() {\n    var todoName = todoInputRef.current.value;\n    axios.post('https://test-38c9e.firebaseio.com/todos.json', {\n      name: todoName\n    }).then(function (res) {\n      setTimeout(function () {\n        var todoItem = {\n          id: res.data.name,\n          name: todoName\n        };\n        dispatch({\n          type: 'ADD',\n          payload: todoItem\n        });\n      }, 3000);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var todoRemoveHanlder = function todoRemoveHanlder(todoId) {\n    axios.delete(\"https://test-38c9e.firebaseio.com/todos/\".concat(todoId, \".json\")).then(function (res) {\n      dispatch({\n        type: 'REMOVE',\n        payload: todoId\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Todo\",\n    ref: todoInputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: todoAddHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Add\"), React.createElement(List, {\n    items: todoList,\n    onClick: todoRemoveHanlder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }));\n};\n\nexport default todo;","map":{"version":3,"sources":["/Users/ahsan/Documents/git/JS Miscellaneous/react-hooks/src/components/Todo.js"],"names":["React","useEffect","useReducer","useRef","axios","List","todo","props","todoInputRef","todoListReducer","state","action","type","concat","payload","filter","id","todoList","dispatch","get","then","res","console","log","todoData","data","todos","key","push","name","catch","err","mouseMoveHandler","event","clientX","clientY","todoAddHandler","todoName","current","value","post","setTimeout","todoItem","todoRemoveHanlder","todoId","delete"],"mappings":"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","sourcesContent":["import React, {useEffect, useReducer, useRef} from 'react';\nimport axios from 'axios';\nimport List from './List';\n\nconst todo = props => {\n    //const [todoName, setTodoName] = useState('');\n    //const [submittedTodo, setSubmittedTodo] = useState(null);\n    //const [todoList, setTodoList] = useState([]);\n\n    const todoInputRef = useRef();\n\n\n    const todoListReducer = (state, action) => {\n        switch(action.type) {\n            case 'ADD':\n                return state.concat(action.payload);\n            case 'SET':\n                return action.payload;\n            case 'REMOVE':\n                return state.filter((todo) => todo.id !== action.payload);\n            default:\n                return state;\n        }\n    }\n\n    const [todoList, dispatch] = useReducer(todoListReducer, []);\n\n    useEffect(()=>{\n        axios.get('https://test-38c9e.firebaseio.com/todos.json')\n            .then(res => {\n                console.log(res)\n                const todoData = res.data;\n                const todos = []\n                for(const key in todoData){\n                    todos.push({id : key, name : todoData[key].name})\n                }\n                dispatch({type : 'SET', payload : todos})\n            })\n            .catch(err => console.log(err))\n        return () => {\n            console.log('Cleanup')\n        }\n    },[]);\n\n    const mouseMoveHandler = event => {\n        console.log(event.clientX, event.clientY)\n    }\n\n\n\n    // useEffect(() => {\n    //     document.addEventListener('mouseover',mouseMoveHandler)\n    //     return () => {\n    //         document.removeEventListener('mouseover', mouseMoveHandler)\n    //     }\n    // },[])\n\n    // useEffect(() => {\n    //     if (submittedTodo){\n    //         dispatch({type : 'ADD', payload : submittedTodo})\n    //     }\n    // }, [submittedTodo])\n\n    // const inputChangeHandler = (event) => {\n    //     setTodoName(event.target.value)\n    // }\n\n    const todoAddHandler = () => {\n        const todoName = todoInputRef.current.value;\n\n         axios.post('https://test-38c9e.firebaseio.com/todos.json',{name : todoName})\n            .then(res => {\n                setTimeout(()=> {\n                    const todoItem = {id : res.data.name, name : todoName}\n                    dispatch({type : 'ADD', payload : todoItem})\n                }, 3000);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n    \n    const todoRemoveHanlder = todoId => {\n        axios.delete(`https://test-38c9e.firebaseio.com/todos/${todoId}.json`)\n            .then(res => {\n                dispatch({type : 'REMOVE', payload : todoId})\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <React.Fragment>\n            <input \n                type = 'text' \n                placeholder = 'Todo'\n                ref = {todoInputRef} />\n            <button type = \"button\" onClick = {todoAddHandler} >Add</button>\n            <List items = {todoList} onClick = {todoRemoveHanlder}/>\n        </React.Fragment>\n    )\n   \n}\n\nexport default todo;"]},"metadata":{},"sourceType":"module"}